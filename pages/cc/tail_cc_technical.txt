
This uses the ssh command. If you are using a Windows PC it is common to connect using PuTTY (see below).
The point of the command is to create a tunnel from port 7005 on your local machine to port 8889 on the 
cloud VM. 

The **-i** switch specifies an identity file (key pair access to the cloud VM). 

The **-L** switch in the command stands for **Local**.  As another example concerning MySQL database connections: Here is a paraphrased quote 
from an online ssh tutorial
[http://support.suso.com/supki/SSH_Tutorial_for_Linux](http://support.suso.com/supki/SSH_Tutorial_for_Linux):

> SSH can forward [communication across a] SSH session that you establish.  For example, you can 
> set up a port forward for your connection from your home machine to [xyz.org] such that [...] 
> connections to localhost port 3306 forward to the remote machine's 3306. Port 3306 is the port that 
> the MySQL server listens on, so this would allow you to bypass the normal host checks that the MySQL 
> server would make and allow you to run GUI MySQL programs on your local computer while using 
> the database on your remote machine. Here is the command to accomplish this: 
>
> ssh -L 3306:mysql.suso.org:3306 username@arvo.suso.org
>
> The -L (which means Local port) takes one argument of the form 
> <local-port>:<connect-to-host>:<connect-to-port>.
> You specify what host and port the connection will go to on the other side of the SSH connection. 
> When > you make a connection to the <local-port> port, it sends the data through the SSH connection 
> and then connects to <connect-to-host>:<connect-to-port> on the other side. From the point of view 
> of <connect-to-host>, it is as if the connection came from the SSH server that you login to. 

Next, on your local machine you can open a browser and in the address bar enter:

```
localhost:7005
```

Now you should see the Jupyter notebook (from the cloud VM) on your browser. 

Jupyter notebooks have associated passwords; and in the case above our colleague had to set this
password to an empty string **""** in the Jupyter config file due to Jupyter permission 
default settings.  


The Windows PC environment does not yet support the **ssh** command and consequently cloud VM connections typically
use the PuTTY application. (There are also 
[alternative options](http://web.archive.org/web/20130806071308/http://huddledmasses.org/scriptable-ssh-from-powershell/) ). 
PuTTY is a slightly circuitous but perfectly reliable means of connecting with a cloud VM, supporting as it does several
communication protocols including ssh. 

The main point here is that a VM credential file with a *.pem* extension does not work with PuTTY. You can use the companion
application PuTTYgen to convert this file to an equivalent file with a .ppk file extension.  The PuTTY program can then use 
this credential file to connect to a cloud VM. 

kilroy need screencap of PuTTYgen in operation and the menu location for specifying a .ppk file.

kilroy need text and screencap showing use of PuTTY to accomplish the Jupyter tunnel given above; and copy to the all Jupyter pages as well. 

## Python connections

### Exclam

## Linux connections

### curl 

Per Wikipedia, [**curl**](https://en.wikipedia.org/wiki/CURL) is a command line tool for getting or sending files 
using [URL](https://en.wikipedia.org/wiki/Uniform_Resource_Locator) syntax. 
[See this link for Curl usage](http://www.computerhope.com/unix/curl.htm).

